fun q  -> addo (!O) (!(S (!O))) q, 1 answer {
q=(S O); 
}
fun q  -> addo (!(S (!O))) (!(S (!O))) q, 1 answer {
q=(S (S O)); 
}
fun q  -> addo (!O) (!(S (!O))) q, 2 answers {
q=(S O); 
}
fun q  -> addo (!(S (!O))) (!(S (!O))) q, 2 answers {
q=(S (S O)); 
}
fun q  -> addo q (!(S (!O))) (!(S (!O))), 1 answer {
q=O; 
}
fun q  -> addo (!(S (!O))) q (!(S (!O))), 1 answer {
q=O; 
}
fun q  -> addo q (!(S (!O))) (!(S (!O))), 2 answers {
q=O; 
}
fun q  -> addo (!(S (!O))) q (!(S (!O))), 2 answers {
q=O; 
}
fun q  -> fun r  -> addo q r (!(S (!(S (!(S (!(S (!O))))))))), all answers {
q=O; r=(S (S (S (S O)))); 
q=(S O); r=(S (S (S O))); 
q=(S (S O)); r=(S (S O)); 
q=(S (S (S O))); r=(S O); 
q=(S (S (S (S O)))); r=O; 
}
fun q  -> mulo (!O) (!(S (!O))) q, 1 answer {
q=O; 
}
fun q  -> mulo (!(S (!(S (!O))))) (!(S (!(S (!O))))) q, 1 answer {
q=(S (S (S (S O)))); 
}
fun q  -> mulo (!O) (!(S (!O))) q, 2 answers {
q=O; 
}
fun q  -> mulo q (!(S (!(S (!O))))) (!(S (!(S (!O))))), 1 answer {
q=(S O); 
}
fun q  -> mulo q (!(S (!(S (!O))))) (!(S (!(S (!(S (!O))))))), 1 answer {
}
fun q  -> mulo q (!(S (!(S (!O))))) (!(S (!(S (!O))))), 2 answers {
q=(S O); 
}
fun q  -> mulo q (!(S (!(S (!O))))) (!(S (!(S (!(S (!O))))))), 2 answers {
}
fun q  -> mulo (!(S (!(S (!O))))) q (!(S (!(S (!O))))), 1 answer {
q=(S O); 
}
fun q  -> mulo (!(S (!(S (!O))))) q (!(S (!(S (!(S (!O))))))), 1 answer {
}
fun q  -> mulo (!(S (!(S (!O))))) q (!(S (!(S (!O))))), 2 answers {
q=(S O); 
}
fun q  -> mulo (!(S (!(S (!O))))) q (!(S (!(S (!(S (!O))))))), 2 answers {
}
fun q  -> fun r  -> mulo q (!(S (!O))) r, 1 answer {
q=O; r=O; 
}
fun q  -> fun r  -> mulo q (!(S (!O))) r, 10 answers {
q=O; r=O; 
q=(S O); r=(S O); 
q=(S (S O)); r=(S (S O)); 
q=(S (S (S O))); r=(S (S (S O))); 
q=(S (S (S (S O)))); r=(S (S (S (S O)))); 
q=(S (S (S (S (S O))))); r=(S (S (S (S (S O))))); 
q=(S (S (S (S (S (S O)))))); r=(S (S (S (S (S (S O)))))); 
q=(S (S (S (S (S (S (S O))))))); r=(S (S (S (S (S (S (S O))))))); 
q=(S (S (S (S (S (S (S (S O)))))))); r=(S (S (S (S (S (S (S (S O)))))))); 
q=(S (S (S (S (S (S (S (S (S O))))))))); r=(S (S (S (S (S (S (S (S (S O))))))))); 
}
fun q  -> fun r  -> mulo (!(S (!O))) q r, 1 answer {
q=O; r=O; 
}
fun q  -> fun r  -> mulo (!(S (!O))) q r, 10 answers {
q=O; r=O; 
q=(S O); r=(S O); 
q=(S (S O)); r=(S (S O)); 
q=(S (S (S O))); r=(S (S (S O))); 
q=(S (S (S (S O)))); r=(S (S (S (S O)))); 
q=(S (S (S (S (S O))))); r=(S (S (S (S (S O))))); 
q=(S (S (S (S (S (S O)))))); r=(S (S (S (S (S (S O)))))); 
q=(S (S (S (S (S (S (S O))))))); r=(S (S (S (S (S (S (S O))))))); 
q=(S (S (S (S (S (S (S (S O)))))))); r=(S (S (S (S (S (S (S (S O)))))))); 
q=(S (S (S (S (S (S (S (S (S O))))))))); r=(S (S (S (S (S (S (S (S (S O))))))))); 
}
fun q  -> fun r  -> mulo q r (!O), 1 answer {
q=O; r=_.11; 
}
fun q  -> fun r  -> mulo q r (!(S (!O))), 1 answer {
q=(S O); r=(S O); 
}
fun q  -> mulo (!(S (!O))) (!(S (!O))) q, 1 answer {
q=(S O); 
}
fun q  -> fun r  -> mulo q r (!(S (!(S (!(S (!(S (!O))))))))), 1 answer {
q=(S (S (S (S O)))); r=(S O); 
}
fun q  -> fun r  -> mulo q r (!(S (!(S (!(S (!(S (!O))))))))), 3 answers {
q=(S (S (S (S O)))); r=(S O); 
q=(S (S O)); r=(S (S O)); 
q=(S O); r=(S (S (S (S O)))); 
}
fun q  -> fun r  -> fun s  -> mulo q r s, 3 answers {
q=O; r=_.11; s=O; 
q=(S O); r=O; s=O; 
q=(S (S O)); r=O; s=O; 
}
fun q  -> fun r  -> fun s  -> mulo q r s, 10 answers {
q=O; r=_.11; s=O; 
q=(S O); r=O; s=O; 
q=(S (S O)); r=O; s=O; 
q=(S O); r=(S O); s=(S O); 
q=(S (S (S O))); r=O; s=O; 
q=(S (S (S (S O)))); r=O; s=O; 
q=(S O); r=(S (S O)); s=(S (S O)); 
q=(S (S O)); r=(S O); s=(S (S O)); 
q=(S (S (S (S (S O))))); r=O; s=O; 
q=(S (S (S (S (S (S O)))))); r=O; s=O; 
}
